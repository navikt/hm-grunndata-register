version: '3'
services:
  postgresregister:
    hostname: postgres
    container_name: postgresregister
    image: postgres:14
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./src/test/resources/postgres:/docker-entrypoint-initdb.d
    command: ["postgres", "-c", "log_statement=none"]
    networks:
      - register-net
  kafkaregister:
    hostname: kafkaregister
    container_name: kafkaregister
    image: confluentinc/cp-kafka:7.3.1
    logging:
      driver: none
    depends_on:
      - zookeeperregister
    ports:
      - "29092:29092"
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeperregister:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafkaregister:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    networks:
      - register-net
  zookeeperregister:
    image: confluentinc/cp-zookeeper:7.3.1
    hostname: zookeeperregister
    logging:
      driver: none
    container_name: zookeeperregister
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - register-net
  redisregister:
    image: redis:7.0.11-alpine
    hostname: redis
    container_name: redisregister
    ports:
      - "6379:6379"
    networks:
      - register-net

  mediaregister:
    image:
networks:
  register-net: